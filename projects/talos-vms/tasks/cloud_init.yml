---
## 
## Configure th Vm with cloud-init
## 
- name: Build cloud init ISO image
  block:
    - name: Set build path
      set_fact:
        ci_build_path: "/tmp/cloud-init-{{ inventory_hostname_short | lower }}"
        ci_build_iso: "/tmp/cloud-init-{{ inventory_hostname_short | lower }}.iso"

    - name: Install genisoimage
      ansible.builtin.apt:
        name: genisoimage
        state: present
      delegate_to: localhost
    
    - name: Create temporary folder
      ansible.builtin.file:
        path: "{{ ci_build_path }}"
        state: directory
      delegate_to: localhost

    - name: Create user-data file
      ansible.builtin.copy:
        content: "{{ ova_cloud_init_userdata }}"
        dest: "{{ [ ci_build_path, 'user-data' ] | path_join }}"
      delegate_to: localhost

    - name: Create meta-data file
      ansible.builtin.copy:
        content: "{{ ova_cloud_init_metadata }}"
        dest: "{{ [ ci_build_path, 'meta-data' ] | path_join }}"
      delegate_to: localhost

    - name: Create vendor-data file
      ansible.builtin.file:
        path: "{{ [ ci_build_path, 'vendor-data' ] | path_join }}"
        state: touch
      delegate_to: localhost
    
    - name: Find files in the build directory
      find:
        paths: "{{ ci_build_path }}"
        recurse: no
        patterns: "*-data"
      register: found_files
      delegate_to: localhost

    - name: Create fact with build paths
      set_fact:
        ci_build_path_files: "{{ found_files.files | map(attribute='path') | join(' ') }}"
      
    - name: Clean-up old cloud-init.iso
      ansible.builtin.file: 
        path: "{{ ci_build_iso }}"
        state: absent
      delegate_to: localhost
    
    - name: Generate ISO image
      ansible.builtin.command:
        cmd: "genisoimage -output {{ ci_build_iso }} -volid cidata -joliet -rock {{ ci_build_path_files }}"
      args:
        creates: "{{ ci_build_iso }}"
      delegate_to: localhost

    - name: Delete temporary folder
      ansible.builtin.file:
        path: "{{ ci_build_path }}"
        state: absent
      delegate_to: localhost

- name: Upload cloud-init.iso to datastore
  block:
    - name: Upload cloud-init.iso to datastore
      community.vmware.vsphere_copy:
        hostname: "{{ ova_deployment_hostname }}"
        username: "{{ ova_deployment_username }}"
        password: "{{ ova_deployment_password }}"
        validate_certs: "{{ ova_validate_certs }}"
        src: "{{ ci_build_iso }}"
        datacenter: "{{ ova_deployment_datacenter | default(omit) }}"
        datastore: "{{ hardware.datastore }}"
        path: "{{ ova_cloud_init_path }}"
      delegate_to: localhost

    - name: Attach an ISO image to a guest VM
      vmware_guest:
        hostname: "{{ ova_deployment_hostname }}"
        username: "{{ ova_deployment_username }}"
        password: "{{ ova_deployment_password }}"
        validate_certs: "{{ ova_validate_certs }}"
        folder: "{{ ova_deployment_folder }}"
        name: "{{ inventory_hostname_short | lower }}"
        cdrom:
          - type: iso
            iso_path: "[{{ hardware.datastore }}] {{ ova_cloud_init_path }}"
            controller_type: ide
            controller_number: 1
            unit_number: 0
            state: present 
      delegate_to: localhost
